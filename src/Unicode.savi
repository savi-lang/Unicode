:module Unicode
  :: Return the corresponding lowercase letter, if the given codepoint is an
  :: uppercase letter that has such a corresponding lowercase letter.
  :: Raises an error if it is not a letter, if it is already a lowercase letter,
  :: or if it has no corresponding uppercase letter defined in the Unicode spec.
  :fun codepoint_to_lowercase!(code U32) U32
    @_case_info!(code) -! 0x8000_0000

  :: Return the corresponding uppercase letter, if the given codepoint is an
  :: lowercase letter that has such a corresponding uppercase letter.
  :: Raises an error if it is not a letter, if it is already a uppercase letter,
  :: or if it has no corresponding lowercase letter defined in the Unicode spec.
  :fun codepoint_to_uppercase!(code U32) U32
    other_code = @_case_info!(code)
    error! unless other_code < 0x8000_0000
    other_code

  // These are functions used in the `_case_info!` method to distinguish
  // between codes going "to lowercase" (from uppercase) and vice versa.
  // The `_to_lower` method sets the most significant bit, but `_to_upper`
  // does nothing - it is just there for readability/symmetry, or to allow
  // us to change the representation later without changing those call sites.
  :fun _to_lower(code U32) U32: code.bit_or(0x8000_0000)
  :fun _to_upper(code U32) U32: code

  :fun _case_info!(code U32) U32
    // Fast path for ASCII
    return @_case_info_00_ascii!(code) if code < 0x80

    // Note: the following two websites are useful when working on this logic:
    // Search by pasted character: https://www.compart.com/en/unicode
    // View codepoints as a table: https://unicode-table.com/en/
    chunk = code.bit_shr(8)
    case chunk == (
    | 0x00 | @_case_info_00_latin!(code)
    | 0x01 | @_case_info_01_latin!(code)
    | 0x02 | @_case_info_02_latin!(code)
    | 0x03 | @_case_info_03_greek_and_coptic!(code)
    | 0x04 | @_case_info_04_cyrillic!(code)
    | 0x05 | @_case_info_05_cyrillic_and_armenian!(code)
    | 0x10 | @_case_info_10_georgian!(code)
    | 0x13 | @_case_info_13_cherokee!(code)
    | 0x1C | @_case_info_1c_cyrillic_and_georgian!(code)
    | 0x1D | @_case_info_1d_latin!(code)
    | 0x1E | @_case_info_1e_latin!(code)
    | 0x1F | @_case_info_1f_greek!(code)
    | 0x24 | @_case_info_24_enclosed_latin!(code)
    | 0x2C | @_case_info_2c_glagolitic_latin_and_coptic!(code)
    | 0x2D | @_case_info_2d_georgian!(code)
    | 0xA6 | @_case_info_a6_cyrillic!(code)
    | 0xA7 | @_case_info_a7_latin!(code)
    | 0xAB | @_case_info_ab_cherokee!(code)
    | 0xFF | @_case_info_ff_latin_wide!(code)
    | 0x104 | @_case_info_104_deseret_and_osage!(code)
    | 0x10C | @_case_info_10c_old_hungarian!(code)
    | 0x118 | @_case_info_118_warang_citi!(code)
    | 0x16E | @_case_info_16e_medefaidrin!(code)
    | 0x1E9 | @_case_info_1e9_adlam!(code)
    | error!
    )

  :fun _case_info_00_ascii!(code U32) U32
    // 0x00...0x80 : ASCII / Basic Latin
    case (
    | code <= 0x40 | error!
    | code <= 0x5A | @_to_lower(code + 0x20)
    | code <= 0x60 | error!
    | code <= 0x7A | @_to_upper(code - 0x20)
    |                error!
    )

  :fun _case_info_00_latin!(code U32) U32
    // 0x00xx : Latin-1 Supplement
    case (
    | code <  0x00C0 | error!
    | code <  0x00D7 | @_to_lower(code + 0x20)
    | code == 0x00D7 | error!
    | code <  0x00DF | @_to_lower(code + 0x20)
    | code == 0x00DF | error!
    | code <  0x00F7 | @_to_upper(code - 0x20)
    | code == 0x00F7 | error!
    | code <  0x00FF | @_to_upper(code - 0x20)
    | code == 0x00FF | @_to_upper(0x0178)
    | error! // unreachable
    )

  :fun _case_info_01_latin!(code U32) U32
    // 0x01xx : Latin Extended-A and (part of) Extended-B
    case (
    | code <  0x0130 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0130 | error!
    | code == 0x0131 | @_to_upper(0x0049)
    | code <  0x0138 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0138 | error!
    | code <  0x0149 | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0149 | error!
    | code <  0x0178 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0178 | @_to_lower(0x00FF)
    | code <  0x017F | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x017F | error!
    | code == 0x0180 | @_to_upper(0x0243)
    | code == 0x0181 | @_to_lower(0x0253)
    | code <  0x0186 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0186 | @_to_lower(0x0254)
    | code <  0x0189 | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0189 | error!
    | code == 0x018A | @_to_lower(0x0257)
    | code <  0x018D | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x018D | error!
    | code == 0x018E | @_to_lower(0x0258)
    | code == 0x018F | @_to_lower(0x0259)
    | code == 0x0190 | @_to_lower(0x025B)
    | code <  0x0193 | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0193 | @_to_lower(0x0260)
    | code == 0x0194 | @_to_lower(0x0263)
    | code == 0x0195 | @_to_upper(0x01F6)
    | code == 0x0196 | @_to_lower(0x0269)
    | code == 0x0197 | @_to_lower(0x0268)
    | code <  0x019A | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x019A | @_to_upper(0x023D)
    | code == 0x019B | error!
    | code == 0x019C | @_to_lower(0x026F)
    | code == 0x019D | @_to_lower(0x0272)
    | code == 0x019E | @_to_upper(0x0220)
    | code == 0x019F | @_to_lower(0x0275)
    | code <  0x01A6 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x01A6 | @_to_lower(0x0280)
    | code <  0x01A9 | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x01A9 | @_to_lower(0x0283)
    | code <  0x01AC | error!
    | code <  0x01AE | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x01AE | @_to_lower(0x0288)
    | code <  0x01B1 | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x01B1 | @_to_lower(0x028A)
    | code == 0x01B2 | @_to_lower(0x028B)
    | code <  0x01B7 | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x01B7 | @_to_lower(0x0292)
    | code <  0x01BA | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0x01BC | error!
    | code <  0x01BE | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x01BF | @_to_upper(0x01F7)
    | code <  0x01C4 | error!
    | code == 0x01C4 | @_to_lower(0x01C6)
    | code == 0x01C5 | error!
    | code == 0x01C6 | @_to_upper(0x01C4)
    | code == 0x01C7 | @_to_lower(0x01C9)
    | code == 0x01C8 | error!
    | code == 0x01C9 | @_to_upper(0x01C7)
    | code == 0x01CA | @_to_lower(0x01CC)
    | code == 0x01CB | error!
    | code == 0x01CC | @_to_upper(0x01CA)
    | code <  0x01DD | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x01DD | error!
    | code <  0x01F0 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x01F0 | error!
    | code == 0x01F1 | @_to_lower(0x01F3)
    | code == 0x01F2 | error!
    | code == 0x01F3 | @_to_upper(0x01F1)
    | code <  0x01F6 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x01F6 | @_to_lower(0x0195)
    | code == 0x01F7 | @_to_lower(0x01BF)
    |                  if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    )

  :fun _case_info_02_latin!(code U32) U32
    // 0x02xx : (part of) Latin Extended-B
    case (
    | code <  0x0220 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0220 | @_to_lower(0x019E)
    | code <  0x0222 | error!
    | code <  0x0234 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0x023A | error!
    | code == 0x023A | @_to_lower(0x2C65)
    | code <  0x023D | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x023D | @_to_lower(0x019A)
    | code == 0x023E | @_to_lower(0x2C66)
    | code == 0x023F | @_to_upper(0x2C7E)
    | code == 0x0240 | @_to_upper(0x2C7F)
    | code <  0x0243 | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0243 | @_to_lower(0x0180)
    | code == 0x0244 | @_to_lower(0x0289)
    | code == 0x0245 | @_to_lower(0x028C)
    | code <  0x0250 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0250 | @_to_upper(0x2C6F)
    | code == 0x0251 | @_to_upper(0x2C6D)
    | code == 0x0252 | @_to_upper(0x2C70)
    | code == 0x0253 | @_to_upper(0x0181)
    | code == 0x0254 | @_to_upper(0x0186)
    | code == 0x0257 | @_to_upper(0x018A)
    | code == 0x0258 | @_to_upper(0x018E)
    | code == 0x0259 | @_to_upper(0x018F)
    | code == 0x025B | @_to_upper(0x0190)
    | code == 0x025C | @_to_upper(0xA7AB)
    | code == 0x0260 | @_to_upper(0x0193)
    | code == 0x0261 | @_to_upper(0xA7AC)
    | code == 0x0263 | @_to_upper(0x0194)
    | code == 0x0265 | @_to_upper(0xA78D)
    | code == 0x0266 | @_to_upper(0xA7AA)
    | code == 0x0268 | @_to_upper(0x0197)
    | code == 0x0269 | @_to_upper(0x0196)
    | code == 0x026A | @_to_upper(0xA7AE)
    | code == 0x026B | @_to_upper(0x2C62)
    | code == 0x026C | @_to_upper(0xA7AD)
    | code == 0x026F | @_to_upper(0x019C)
    | code == 0x0271 | @_to_upper(0x2C6E)
    | code == 0x0272 | @_to_upper(0x019D)
    | code == 0x0275 | @_to_upper(0x019F)
    | code == 0x027D | @_to_upper(0x2C64)
    | code == 0x0280 | @_to_upper(0x01A6)
    | code == 0x0282 | @_to_upper(0xA7C5)
    | code == 0x0283 | @_to_upper(0x01A9)
    | code == 0x0287 | @_to_upper(0xA7B1)
    | code == 0x0288 | @_to_upper(0x01AE)
    | code == 0x0289 | @_to_upper(0x0244)
    | code == 0x028A | @_to_upper(0x01B1)
    | code == 0x028B | @_to_upper(0x01B2)
    | code == 0x028C | @_to_upper(0x0245)
    | code == 0x0292 | @_to_upper(0x01B7)
    | code == 0x029D | @_to_upper(0xA7B2)
    | code == 0x029E | @_to_upper(0xA7B0)
    | error! // (fills in the gaps between the preceding individual cases)
    )

  :fun _case_info_03_greek_and_coptic!(code U32) U32
    // 0x03xx : Greek and Coptic
    case (
    | code < 0x0370 | error!
    | code < 0x0386 |
      case (
      | code <  0x0374 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
      | code <  0x0376 | error!
      | code <  0x0378 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
      | code <  0x037B | error!
      | code <  0x037E | @_to_upper(code + 0x82)
      | error!
      )
    | code < 0x0391 |
      case (
      | code == 0x0386 | @_to_lower(0x03AC)
      | code == 0x0388 | @_to_lower(0x03AD)
      | code == 0x0389 | @_to_lower(0x03AE)
      | code == 0x038A | @_to_lower(0x03AF)
      | code == 0x038C | @_to_lower(0x03CC)
      | code == 0x038E | @_to_lower(0x03CD)
      | code == 0x038F | @_to_lower(0x03CE)
      | code == 0x0390 | @_to_upper(0x0399)
      | error!
      )
    | code == 0x03A2 | error!
    | code <  0x03AC | @_to_lower(code + 0x20)
    | code <  0x03B1 |
      case (
      | code == 0x03AC | @_to_upper(0x0386)
      | code == 0x03AD | @_to_upper(0x0388)
      | code == 0x03AE | @_to_upper(0x0389)
      | code == 0x03AF | @_to_upper(0x038A)
      | code == 0x03B0 | @_to_upper(0x03A5)
      | error!
      )
    | code == 0x03C2 | @_to_upper(0x03A3)
    | code <  0x03CC | @_to_upper(code - 0x20)
    | code <  0x03D8 |
      case (
      | code == 0x03CC | @_to_upper(0x038C)
      | code == 0x03CD | @_to_upper(0x038E)
      | code == 0x03CE | @_to_upper(0x038F)
      | code == 0x03CF | @_to_lower(0x03D7)
      | code == 0x03D0 | @_to_upper(0x0392)
      | code == 0x03D1 | @_to_upper(0x0398)
      | code == 0x03D5 | @_to_upper(0x03A6)
      | code == 0x03D7 | @_to_upper(0x03CF)
      | error!
      )
    | code < 0x03F0 |
      if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | // 0x03F0...0x0400
      case (
      | code == 0x03F0 | @_to_upper(0x039A)
      | code == 0x03F1 | @_to_upper(0x03A1)
      | code == 0x03F2 | @_to_upper(0x03F9)
      | code == 0x03F3 | @_to_upper(0x037F)
      | code == 0x03F4 | @_to_lower(0x03B8)
      | code == 0x03F5 | @_to_upper(0x0395)
      | code == 0x03F6 | error!
      | code <  0x03F9 | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
      | code == 0x03F9 | @_to_lower(0x03F2)
      | code <  0x03FC | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
      | code == 0x03FC | error!
      | code <  0x0400 | @_to_lower(code - 0x82)
      | error! // unreachable
      )
    )

  :fun _case_info_04_cyrillic!(code U32) U32
    // 0x04xx : Cyrillic
    case (
    | code <  0x0410 | @_to_lower(code + 0x50)
    | code <  0x0430 | @_to_lower(code + 0x20)
    | code <  0x0450 | @_to_upper(code - 0x20)
    | code <  0x0460 | @_to_upper(code - 0x50)
    | code <  0x0482 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0x048A | error!
    | code <  0x04C0 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x04C0 | @_to_lower(0x4CF)
    | code <  0x04CF | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x04CF | @_to_upper(0x04C0)
    |                  if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    )

  :fun _case_info_05_cyrillic_and_armenian!(code U32) U32
    // 0x05xx : Cyrillic Supplement and Armenian
    case (
    | code <  0x0530 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x0530 | error!
    | code <  0x0557 | @_to_lower(code + 0x30)
    | code <  0x0561 | error!
    | code <  0x0587 | @_to_upper(code - 0x30)
    |                  error!
    )

  :fun _case_info_10_georgian!(code U32) U32
    // 0x10xx : Georgian
    case (
    | code <  0x10A0 | error!
    | code <  0x10C6 | @_to_lower(code + 0x30)
    | code == 0x10C7 | @_to_lower(code + 0x30)
    | code == 0x10CD | @_to_lower(code + 0x30)
    | code <  0x10D0 | error!
    | code <  0x10F6 | @_to_upper(code - 0x30)
    | code == 0x10F7 | @_to_upper(code - 0x30)
    | code == 0x10FD | @_to_upper(code - 0x30)
    |                  error!
    )

  :fun _case_info_13_cherokee!(code U32) U32
    // 0x13xx : Cherokee
    case (
    | code <  0x13A0 | error!
    | code <  0x13F0 | @_to_lower(code + 0x97D0)
    | code <  0x13F6 | @_to_lower(code + 0x8)
    | code <  0x13F8 | error!
    | code <  0x13FE | @_to_upper(code - 0x8)
    |                  error!
    )

  :fun _case_info_1c_cyrillic_and_georgian!(code U32) U32
    // 0x1Cxx : Cyrillic Extended-C and Georgian Extended
    case (
    | code <  0x1C80 | error!
    | code == 0x1C80 | @_to_upper(0x0412)
    | code == 0x1C81 | @_to_upper(0x0414)
    | code == 0x1C82 | @_to_upper(0x041E)
    | code == 0x1C83 | @_to_upper(0x0421)
    | code == 0x1C84 | @_to_upper(0x0422)
    | code == 0x1C85 | @_to_upper(0x0422)
    | code == 0x1C86 | @_to_upper(0x042A)
    | code == 0x1C87 | @_to_upper(0x0462)
    | code == 0x1C88 | @_to_upper(0xA64A)
    | code <  0x1C90 | error!
    | code <  0x1CBB | @_to_lower(code - 0x0BC0)
    | code <  0x1CBD | error!
    | code <  0x1CC0 | @_to_lower(code - 0x0BC0)
    |                  error!
    )

  :fun _case_info_1d_latin!(code U32) U32
    // 0x1Dxx : Phonetic Extensions and Phonetic Extensions Supplement
    case (
    | code == 0x1D79 | @_to_upper(0xA77D)
    | code == 0x1D7D | @_to_upper(0x2C63)
    | code == 0x1D8E | @_to_upper(0xA7C6)
    | error!
    )

  :fun _case_info_1e_latin!(code U32) U32
    // 0x1Exx : Latin Extended Additional
    case (
    | code < 0x1E96 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code < 0x1EA0 | error!
    |                 if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    )

  :fun _case_info_1f_greek!(code U32) U32
    // 0x1Fxx : Greek Extended
    case (
    | code <  0x1F08 | @_to_upper(code + 8)
    | code <  0x1F10 | @_to_lower(code - 8)
    | code <  0x1F16 | @_to_upper(code + 8)
    | code <  0x1F18 | error!
    | code <  0x1F1E | @_to_lower(code - 8)
    | code <  0x1F20 | error!
    | code <  0x1F28 | @_to_upper(code + 8)
    | code <  0x1F30 | @_to_lower(code - 8)
    | code <  0x1F38 | @_to_upper(code + 8)
    | code <  0x1F40 | @_to_lower(code - 8)
    | code <  0x1F46 | @_to_upper(code + 8)
    | code <  0x1F48 | error!
    | code <  0x1F4E | @_to_lower(code - 8)
    | code <  0x1F58 | if code.is_odd (@_to_upper(code + 8) | error!)
    | code <  0x1F60 | if code.is_odd (@_to_lower(code - 8) | error!)
    | code <  0x1F68 | @_to_upper(code + 8)
    | code <  0x1F70 | @_to_lower(code - 8)
    | code <  0x1F80 | error!
    | code <  0x1F88 | @_to_upper(code + 8)
    | code <  0x1F90 | @_to_lower(code - 8)
    | code <  0x1F98 | @_to_upper(code + 8)
    | code <  0x1FA0 | @_to_lower(code - 8)
    | code <  0x1FA8 | @_to_upper(code + 8)
    | code <  0x1FB0 | @_to_lower(code - 8)
    | code <  0x1FB5 | @_to_upper(code + 8)
    | code <  0x1FB8 | error!
    | code <  0x1FBD | @_to_lower(code - 8)
    | code <  0x1FC2 | error!
    | code <  0x1FC5 | @_to_upper(code + 8)
    | code <  0x1FC8 | error!
    | code <  0x1FCD | @_to_lower(code - 8)
    | code <  0x1FD0 | error!
    | code <  0x1FD4 | @_to_upper(code + 8)
    | code <  0x1FD8 | error!
    | code <  0x1FDC | @_to_lower(code - 8)
    | code <  0x1FE0 | error!
    | code <  0x1FE2 | @_to_upper(code + 8)
    | code == 0x1FE5 | @_to_upper(0x1FEC)
    | code <  0x1FE8 | error!
    | code <  0x1FEA | @_to_lower(code - 8)
    | code == 0x1FEC | @_to_lower(0x1FE5)
    | error!
    )

  :fun _case_info_24_enclosed_latin!(code U32) U32
    // 0x24xx : Enclosed Alphanumerics
    case (
    | code < 0x24B6 | error!
    | code < 0x24D0 | @_to_lower(code + 0x1A)
    | code < 0x24EA | @_to_upper(code - 0x1A)
    |                 error!
    )

  :fun _case_info_2c_glagolitic_latin_and_coptic!(code U32) U32
    // 0x2Cxx : Glagolitic, Latin Extended-C, and Coptic
    case (
    | code <  0x2C2F | @_to_lower(code + 0x30)
    | code == 0x2C2F | error!
    | code <  0x2C5F | @_to_upper(code - 0x30)
    | code == 0x2C5F | error!
    | code <  0x2C62 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x2C62 | @_to_lower(0x026B)
    | code == 0x2C63 | @_to_lower(0x1D7D)
    | code == 0x2C64 | @_to_lower(0x027D)
    | code == 0x2C65 | @_to_upper(0x023A)
    | code == 0x2C66 | @_to_upper(0x023E)
    | code <  0x2C6D | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x2C6D | @_to_lower(0x0251)
    | code == 0x2C6E | @_to_lower(0x0271)
    | code == 0x2C6F | @_to_lower(0x0250)
    | code == 0x2C70 | @_to_lower(0x0252)
    | code == 0x2C71 | error!
    | code <  0x2C74 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0x2C74 | error!
    | code <  0x2C77 | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0x2C7E | error!
    | code == 0x2C7E | @_to_lower(0x023F)
    | code == 0x2C7F | @_to_lower(0x0240)
    | code <  0x2CE4 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0x2CEB | error!
    | code <  0x2CEF | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0x2CF2 | error!
    | code <  0x2CF4 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | error!
    )

  :fun _case_info_2d_georgian!(code U32) U32
    // 0x2Dxx : Georgian Supplement
    case (
    | code <  0x2D26 | @_to_upper(code - 0x1C60)
    | code == 0x2D27 | @_to_upper(code - 0x1C60)
    | code == 0x2D2D | @_to_upper(code - 0x1C60)
    |                  error!
    )

  :fun _case_info_a6_cyrillic!(code U32) U32
    // 0xA6xx : Cyrillic Extended-C
    case (
    | code <  0xA640 | error!
    | code <  0xA66E | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0xA680 | error!
    | code <  0xA69C | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    |                  error!
    )

  :fun _case_info_a7_latin!(code U32) U32
    // 0xA7xx : Latin Extended-D
    case (
    | code <  0xA722 | error!
    | code <  0xA730 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0xA732 | error!
    | code <  0xA770 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0xA779 | error!
    | code <  0xA77D | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0xA77D | @_to_lower(0x1D79)
    | code <  0xA788 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0xA78B | error!
    | code <  0xA78D | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0xA78D | @_to_lower(0x0265)
    | code <  0xA790 | error!
    | code <  0xA794 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0xA794 | @_to_upper(0xA7C4)
    | code == 0xA795 | error!
    | code <  0xA7AA | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0xA7AA | @_to_lower(0x0266)
    | code == 0xA7AB | @_to_lower(0x025C)
    | code == 0xA7AC | @_to_lower(0x0261)
    | code == 0xA7AD | @_to_lower(0x026C)
    | code == 0xA7AE | @_to_lower(0x026A)
    | code == 0xA7AF | error!
    | code == 0xA7B0 | @_to_lower(0x029E)
    | code == 0xA7B1 | @_to_lower(0x0287)
    | code == 0xA7B2 | @_to_lower(0x029D)
    | code == 0xA7B3 | @_to_lower(0xAB53)
    | code <  0xA7C0 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0xA7C2 | error!
    | code <  0xA7C4 | if code.is_even (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code == 0xA7C4 | @_to_lower(0xA794)
    | code == 0xA7C5 | @_to_lower(0x0282)
    | code == 0xA7C6 | @_to_lower(0x1D8E)
    | code <  0xA7CB | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | code <  0xA7F5 | error!
    | code <  0xA7F7 | if code.is_odd (@_to_lower(code + 1) | @_to_upper(code - 1))
    | error!
    )

  :fun _case_info_ab_cherokee!(code U32) U32
    // 0xABxx : Latin Extended-E and Cherokee
    case (
    | code == 0xAB53 | @_to_upper(0xA7B3)
    | code <  0xAB70 | error!
    | code <  0xABC0 | @_to_upper(code - 0x97D0)
    |                  error!
    )

  :fun _case_info_ff_latin_wide!(code U32) U32
    // 0xFFxx : Halfwidth and Fullwidth Forms
    case (
    | code < 0xFF21 | error!
    | code < 0xFF3B | @_to_lower(code + 0x20)
    | code < 0xFF41 | error!
    | code < 0xFF5B | @_to_upper(code - 0x20)
    | error!
    )

  :fun _case_info_104_deseret_and_osage!(code U32) U32
    // 0x104xx : Deseret and Osage
    case (
    | code < 0x10428 | @_to_lower(code + 0x28)
    | code < 0x10450 | @_to_upper(code - 0x28)
    | code < 0x104B0 | error!
    | code < 0x104D4 | @_to_lower(code + 0x28)
    | code < 0x104D8 | error!
    | code < 0x104FC | @_to_upper(code - 0x28)
    | error!
    )

  :fun _case_info_10c_old_hungarian!(code U32) U32
    // 0x10Cxx : Old Hungarian
    case (
    | code < 0x10C80 | error!
    | code < 0x10CB3 | @_to_lower(code + 0x40)
    | code < 0x10CC0 | error!
    | code < 0x10CF3 | @_to_upper(code - 0x40)
    | error!
    )

  :fun _case_info_118_warang_citi!(code U32) U32
    // 0x118xx : Warang Citi
    case (
    | code < 0x118A0 | error!
    | code < 0x118C0 | @_to_lower(code + 0x20)
    | code < 0x118E0 | @_to_upper(code - 0x20)
    | error!
    )

  :fun _case_info_16e_medefaidrin!(code U32) U32
    // 0x16Exx : Medefaidrin
    case (
    | code < 0x16E40 | error!
    | code < 0x16E60 | @_to_lower(code + 0x20)
    | code < 0x16E80 | @_to_upper(code - 0x20)
    | error!
    )

  :fun _case_info_1e9_adlam!(code U32) U32
    // 0x1E9xx : Adlam
    case (
    | code < 0x1E922 | @_to_lower(code + 0x22)
    | code < 0x1E944 | @_to_upper(code - 0x22)
    | error!
    )
